
import java.awt.Point;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.KeyStroke;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.filechooser.FileNameExtensionFilter;


public class MarcoPrincipal extends javax.swing.JFrame {

    private  JFileChooser cargarImagen;
    private  VentanaInterna ventana;
    private String nombreImagen;
    private final FileNameExtensionFilter filtro;
    VentanaInterna ventanaInterna;
    
    public MarcoPrincipal() {
        initComponents();
        atajosTeclado();
        escritorio.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);
        
        cargarImagen = new JFileChooser();   
        filtro = new FileNameExtensionFilter("Archivos de imagen (*.png, *.jpeg, *.jpg, *.bmp, *.tif, *.gif)" ,"png", "jpeg", "jpg","bmp","tif","gif");
        
        nombreImagen = "";
        opcionUmbralizar.setEnabled(false);

        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        menu = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        opcionAbrir = new javax.swing.JMenuItem();
        opcionSalir = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        opcionUmbralizar = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        opcionAtajosTeclado = new javax.swing.JMenuItem();
        opcionAcercaDe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Practica 7 -  Ecritorio y Ventanas Internas");

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 425, Short.MAX_VALUE)
        );

        menuArchivo.setText("Archivo");

        opcionAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/abrir.png"))); // NOI18N
        opcionAbrir.setText("Abrir");
        opcionAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAbrirActionPerformed(evt);
            }
        });
        menuArchivo.add(opcionAbrir);

        opcionSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/salir.png"))); // NOI18N
        opcionSalir.setText("Salir");
        opcionSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(opcionSalir);

        menu.add(menuArchivo);

        menuEditar.setText("Editar");
        menuEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditarActionPerformed(evt);
            }
        });

        opcionUmbralizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/editar.png"))); // NOI18N
        opcionUmbralizar.setText("Umbralizar");
        opcionUmbralizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionUmbralizarActionPerformed(evt);
            }
        });
        menuEditar.add(opcionUmbralizar);

        menu.add(menuEditar);

        menuAyuda.setText("Ayuda");

        opcionAtajosTeclado.setText("Atajos de teclado");
        opcionAtajosTeclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAtajosTecladoActionPerformed(evt);
            }
        });
        menuAyuda.add(opcionAtajosTeclado);

        opcionAcercaDe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/info.png"))); // NOI18N
        opcionAcercaDe.setText("Acerca de ");
        opcionAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAcercaDeActionPerformed(evt);
            }
        });
        menuAyuda.add(opcionAcercaDe);

        menu.add(menuAyuda);

        setJMenuBar(menu);
        menu.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        getAccessibleContext().setAccessibleName("Practica 7");
        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarVentanas() {
        JInternalFrame[] ventanas = escritorio.getAllFrames();
        if(ventanas != null){
            for (JInternalFrame ventanaActiva : ventanas) {    
                ventanaActiva.dispose();
            }
        }
    }
    
    private void opcionAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAbrirActionPerformed

        cargarImagen.addChoosableFileFilter(filtro);  
        ventana = new VentanaInterna();
        
        ventana.addInternalFrameListener(new InternalFrameAdapter(){
            public void internalFrameClosing(InternalFrameEvent e) {
                cerrarVentanas();
                opcionUmbralizar.setEnabled(false);
            }
        });
        
        this.cerrarVentanas();
        
        int res = cargarImagen.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            try{
                
                String extencion = extencionImagen();
                if(!extencion.equalsIgnoreCase("bmp") && !extencion.equalsIgnoreCase("gif") && !extencion.equalsIgnoreCase("jpg") && !extencion.equalsIgnoreCase("tif") && !extencion.equalsIgnoreCase("png") && !extencion.equalsIgnoreCase("jpeg")){
                    JOptionPane.showMessageDialog(rootPane, "No se puede leer este Archivo.\n"+
                                                             "Seleccione un archivo de imagen(*.png, *.jpeg, *.jpg, *.bmp, *.tif, *.gif)"   );
                    return;
                }
                nombreImagen = cargarImagen.getSelectedFile().getName();
                escritorio.add(ventana);
                ventana.setVisible(true);
                ventana.setTitle(nombreImagen);
                ventana.setClosable(true);
                ventana.setMaximizable(true);
                ventana.setResizable(true);
                ventana.setImagen2(ImageIO.read(cargarImagen.getSelectedFile()));
                opcionUmbralizar.setEnabled(true);
            }catch(IOException e){
                Logger.getLogger(MarcoPrincipal.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_opcionAbrirActionPerformed

    private void opcionSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionSalirActionPerformed
        int option = JOptionPane.showConfirmDialog(rootPane, "¿Desea cerrar la aplicación?", "Salir", JOptionPane.OK_CANCEL_OPTION);
        if(option == JOptionPane.YES_OPTION)System.exit(0);
    }//GEN-LAST:event_opcionSalirActionPerformed

    private void opcionUmbralizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionUmbralizarActionPerformed

        ventanaInterna = new VentanaInterna();
        int numeroVentanas = 0;
        int valorUmbral;
        
        try{
           
            if(ventana != null){
               if(JOptionPane.OK_OPTION == 0){
                    valorUmbral = Integer.parseInt(JOptionPane.showInputDialog("Introduzca valor del umbral entre 0 y 254"));    
                    if(valorUmbral >= 0 && valorUmbral <= 254){
                        escritorio.add(ventanaInterna);
                        numeroVentanas++;
                        ventanaInterna.setLocation(new Point(numeroVentanas*20,numeroVentanas*20));
                        ventanaInterna.setVisible(true);
                        ventanaInterna.setClosable(true);
                        ventanaInterna.setMaximizable(true);
                        ventanaInterna.setResizable(true);
                        ventanaInterna.setImagen2(ventana.getPanelPrincipal().umbralizar(ventana.getPanelPrincipal().getImagen(), valorUmbral));
                        ventanaInterna.setTitle(nombreImagen + " | Umbral= " + valorUmbral);
                      
                    }else JOptionPane.showMessageDialog(rootPane, "Introduzca un valor numérico entre 0 y 255");
                }
            }
            
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane, "Introduzca valor del umbral entre 0 y 254");
        }
        
    }//GEN-LAST:event_opcionUmbralizarActionPerformed

    private void opcionAtajosTecladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAtajosTecladoActionPerformed
        JFrame frameAyuda = new JFrame("Ayuda");
        frameAyuda.setSize(500, 300);
        frameAyuda.setLocationRelativeTo(null); //para que se muestre en el centor de la pantalla
        frameAyuda.setVisible(true);
        
        //----------------Creamos área de texto para ventana ayuda--------------
        JTextArea areaTextAyuda = new JTextArea(50,30);
        JScrollPane panelText = new JScrollPane();
        panelText.add(areaTextAyuda);
        File ayuda = new File("./src/ficheroAyuda.txt");
        String lines;
        try {
            FileReader fr = new FileReader(ayuda);
            BufferedReader bf = new BufferedReader(fr);
            while((lines = bf.readLine()) !=null){
                areaTextAyuda.append(lines+"\n");
            }
        } catch (IOException ex) {
            Logger.getLogger(MarcoPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
        areaTextAyuda.setEditable(false);
        areaTextAyuda.setLineWrap(true);
        frameAyuda.add(areaTextAyuda);
    }//GEN-LAST:event_opcionAtajosTecladoActionPerformed

    private void opcionAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAcercaDeActionPerformed
        String texto = "Practica 7: Escritorio y Ventanas Internas.\nUmbralizado de Imágenes(II) \n"
                
                      + "Diseño de Interfaces de Usuario Curso 2017/18 \n"
                      + "Autores:\n Edilma Alvarado Espinoza \n Levi Malest Villareal";
        
        JOptionPane.showMessageDialog(rootPane, texto,"Umbralizado de Imágenes",WIDTH);
    }//GEN-LAST:event_opcionAcercaDeActionPerformed

    private void menuEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditarActionPerformed
 
    }//GEN-LAST:event_menuEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarcoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarcoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarcoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarcoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarcoPrincipal().setVisible(true);
            }
        });
    }

    //Devuelve el formato, extensióon de la imagen(png, jpeg, jpg, gif, etc...)
    private String imageFormat(){
       String ruta = cargarImagen.getSelectedFile().toString();
        for (int i= ruta.length(); i > 0; i--) {
            if(ruta.charAt(i-1) == '.'){
                return ruta.substring(i, ruta.length());
            }  
        }
       return null;
    }
    
    private void atajosTeclado(){
        opcionAbrir.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, InputEvent.CTRL_DOWN_MASK));
        opcionSalir.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK));
        opcionUmbralizar.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_U, InputEvent.CTRL_DOWN_MASK));
        opcionAtajosTeclado.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_H, InputEvent.CTRL_DOWN_MASK));
        opcionAcercaDe.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I, InputEvent.CTRL_DOWN_MASK));
    }
    
    private String extencionImagen() {
        String ruta = cargarImagen.getSelectedFile().toString();
        for (int i = ruta.length();  i > 0; i--) {
            if(ruta.charAt(i-1) == '.'){
                return ruta.substring(i, ruta.length());
            }
        }
        return null;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuItem opcionAbrir;
    private javax.swing.JMenuItem opcionAcercaDe;
    private javax.swing.JMenuItem opcionAtajosTeclado;
    private javax.swing.JMenuItem opcionSalir;
    private javax.swing.JMenuItem opcionUmbralizar;
    // End of variables declaration//GEN-END:variables

    
}
